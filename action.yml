name: "delete-releases-workflows"
author: "ophub"
description: "Delete older releases and workflow runs with improved safety and logging"
inputs:
  repo:
    description: "Repo name in the form of <owner>/<repo>"
    required: false
  delete_releases:
    description: "Whether to delete releases records (true/false)"
    required: true
    default: "false"
  delete_tags:
    description: "Whether to delete associated tags (true/false)"
    required: false
    default: "false"
  prerelease_option:
    description: "Whether to differentiate pre-release (all, only, exclude)"
    required: false
    default: "all"
  releases_keep_latest:
    description: "How many latest releases to keep"
    required: false
    default: "90"
  releases_keep_keyword:
    description: "Keyword of the keep releases (separate multiple keywords with /)"
    required: false
    default: ""
  delete_workflows:
    description: "Whether to delete workflows records (true/false)"
    required: true
    default: "false"
  workflows_keep_latest:
    description: "How many latest workflow runs to keep (overrides workflows_keep_day if set)"
    required: false
    default: "0"
  workflows_keep_day:
    description: "Days to keep workflows (ignored if workflows_keep_latest is set)"
    required: false
    default: "90"
  max_releases_fetch:
    description: "Maximum number of releases to fetch per API request"
    required: false
    default: "100"
  max_workflows_fetch:
    description: "Maximum number of workflow runs to fetch per API request"
    required: false
    default: "100"
  out_log:
    description: "Output a detailed log for each step (true/false)"
    required: false
    default: "false"
  gh_token:
    description: "GitHub token with repo permissions"
    required: true

runs:
  using: "composite"
  steps:
    - shell: bash
      run: |
        set -euo pipefail
        
        echo "==> Starting delete action at $(date)"
        
        # 安装依赖
        sudo apt-get -qq update && sudo apt-get -qq install -y jq curl
        
        # 检查必要的工具
        command -v jq >/dev/null 2>&1 || { echo "Error: jq is not installed."; exit 1; }
        command -v curl >/dev/null 2>&1 || { echo "Error: curl is not installed."; exit 1; }
        
        # 设置变量
        gh_token="${{ inputs.gh_token }}"
        [[ -z "${gh_token}" ]] && echo -e "Error: Please set the GitHub token [gh_token]." && exit 1
        
        repo="${{ inputs.repo }}"
        [[ -z "${repo}" ]] && repo="${GITHUB_REPOSITORY}"
        
        delete_releases="${{ inputs.delete_releases }}"
        [[ -z "${delete_releases}" ]] && echo -e "Error: Please set whether to delete releases." && exit 1
        
        delete_tags="${{ inputs.delete_tags }}"
        prerelease_option="${{ inputs.prerelease_option }}"
        releases_keep_latest="${{ inputs.releases_keep_latest }}"
        releases_keep_keyword="${{ inputs.releases_keep_keyword }}"
        
        delete_workflows="${{ inputs.delete_workflows }}"
        [[ -z "${delete_workflows}" ]] && echo -e "Error: Please set whether to delete workflows." && exit 1
        
        workflows_keep_latest="${{ inputs.workflows_keep_latest }}"
        workflows_keep_day="${{ inputs.workflows_keep_day }}"
        workflows_keep_keyword="${{ inputs.workflows_keep_keyword }}"
        out_log="${{ inputs.out_log }}"
        max_releases_fetch="${{ inputs.max_releases_fetch }}"
        max_workflows_fetch="${{ inputs.max_workflows_fetch }}"
        
        # 构建命令参数
        make_command=()
        [[ -n "${repo}" ]] && make_command+=("-r" "${repo}")
        [[ -n "${delete_releases}" ]] && make_command+=("-a" "${delete_releases}")
        [[ -n "${delete_tags}" ]] && make_command+=("-t" "${delete_tags}")
        [[ -n "${prerelease_option}" ]] && make_command+=("-p" "${prerelease_option}")
        [[ -n "${releases_keep_latest}" ]] && make_command+=("-l" "${releases_keep_latest}")
        [[ -n "${releases_keep_keyword}" ]] && make_command+=("-w" "${releases_keep_keyword}")
        [[ -n "${delete_workflows}" ]] && make_command+=("-s" "${delete_workflows}")
        [[ -n "${workflows_keep_latest}" && "${workflows_keep_latest}" -gt 0 ]] && make_command+=("-L" "${workflows_keep_latest}")
        [[ -n "${workflows_keep_day}" && ( -z "${workflows_keep_latest}" || "${workflows_keep_latest}" -eq 0 ) ]] && make_command+=("-d" "${workflows_keep_day}")
        [[ -n "${workflows_keep_keyword}" ]] && make_command+=("-k" "${workflows_keep_keyword}")
        [[ -n "${out_log}" ]] && make_command+=("-o" "${out_log}")
        [[ -n "${gh_token}" ]] && make_command+=("-g" "${gh_token}")
        [[ -n "${max_releases_fetch}" ]] && make_command+=("-R" "${max_releases_fetch}")
        [[ -n "${max_workflows_fetch}" ]] && make_command+=("-W" "${max_workflows_fetch}")
        
        # 执行脚本
        echo "==> Executing deletion script with options: ${make_command[*]}"
        chmod +x del.sh
        ./del.sh "${make_command[@]}"

branding:
  icon: "terminal"
  color: "gray-dark"
